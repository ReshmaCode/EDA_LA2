df = read.csv('test_scores.csv')
head(df)
library(dplyr)
library(ggplot2)
temp = df %>% filter(df$school == "ANKYI")
temp.aov = na.omit(aov(temp$pretest ~ temp$posttest, data = temp))
temp.aov
ggplot(df,aes(x=pretest, fill=n_student, y=posttest))+geom_col(position ="dodge")
plot(df$pretest, df$posttest)
# Scatter plot with base graphics
library(ggplot2)
ggplot(df, aes(x = n_student, y = pretest)) +geom_point()
ggplot(data = NULL, aes(x =df$pretest, y=df$posttest )) +
geom_point()
plot(df$pretest,type = "l")
plot(head(df$pretest),head(df$posttest),  type = "l")
points(head(df$pretest),head(df$posttest))
ggplot(head(df,n=20), aes(x = pretest, y = posttest)) +geom_line()
ggplot(head(df,n=20), aes(x = pretest, y = posttest)) +geom_line()+geom_point()
barplot(head(df$n_student), names.arg = head(df$pretest))
barplot(table(df$pretest))
library(ggplot2)
ggplot(df, aes(x = pretest, y = posttest)) +geom_col()
ggplot(df, aes(x = factor(pretest), y = posttest)) +geom_col()
ggplot(df, aes(x = pretest)) +
geom_bar()
# Bar graph of counts
ggplot(df, aes(x = factor(pretest))) +
geom_bar()
hist(df$pretest)
# Specify approximate number of bins with breaks
hist(df$pretest, breaks = 10)
ggplot(df, aes(x = pretest)) +
geom_histogram()
ggplot(df, aes(x = pretest)) +
geom_histogram(binwidth = 4)
boxplot(head(df$n_student,n=500), head(df$pretest,n=500))
ggplot(head(df,n=100), aes(x = interaction(pretest, posttest), y = n_student)) +
geom_boxplot()
ggplot(df, aes(x = pretest)) +geom_histogram()
ggplot(df, aes(x= posttest)) +
geom_histogram(binwidth = 5, fill = "white", colour = "black")
ggplot(df, aes(x = pretest, fill ='pretest',colour='red' )) +
geom_histogram(position = "identity", alpha = 0.4)
ggplot(df, aes(x = n_student)) +geom_density()
# expand_limits() increases the y range to include the value 0
ggplot(df, aes(x = pretest)) +geom_line(stat = "density") +expand_limits(y = 0)
ggplot(df, aes(x = posttest)) +geom_line(stat = "density") +
geom_line(stat = "density", adjust = .25, colour = "red") +
geom_line(stat = "density", adjust = 2, colour = "blue")
ggplot(df, aes(x = pretest)) +
geom_density(fill = "blue", alpha = .2) +
xlim(35, 105)
ggplot(df, aes(x = pretest)) +
geom_density(fill = "blue", alpha = .2, colour = NA) +
xlim(35, 105) +
geom_line(stat = "density")
ggplot(df, aes(x = pretest, y = ..density..)) +geom_histogram(fill = "cornsilk", colour = "grey60", size = .2) +geom_density() +xlim(35, 105)
data5 <- df %>%
mutate(n_student = as.factor(n_student)) # Convert n_student to a factor
# Map n_student to colour
ggplot(data5, aes(x = pretest, colour = "red")) +geom_density()
# Map n_student to fill and make the fill semitransparent by setting alpha
ggplot(data5, aes(x = pretest, fill = pretest)) +geom_density(alpha = .3)
ggplot(df, aes(x=pretest)) +
geom_freqpoly()
ggplot(faithful, aes(x = waiting)) +
geom_freqpoly(binwidth = 4)           #controlling bin width
binsize <- diff(range(df$pretest))/15
ggplot(df, aes(x = pretest)) +
geom_freqpoly(binwidth = binsize)
ggplot(df, aes(x = factor(n_student), y = pretest)) +
geom_boxplot()
ggplot(df, aes(x = factor(n_student), y = pretest)) +geom_boxplot(width = .5)
ggplot(df, aes(x = factor(n_student), y = pretest)) +geom_boxplot(outlier.size = 1.5, outlier.shape = 21)
ggplot(df, aes(x = 1, y = pretest)) +geom_boxplot() +scale_x_continuous(breaks = NULL) +theme(axis.title.x = element_blank())
ggplot(df, aes(x = factor(n_student), y = pretest)) +geom_boxplot(notch = TRUE)
ggplot(df, aes(x = factor(n_student), y = pretest)) +geom_boxplot() +stat_summary(fun = "mean", geom = "point", shape = 23, size = 3,
fill = "white")
data6 <- ggplot(df, aes(x = pretest, y = n_student))
data6+geom_violin()
data6+geom_violin() +geom_boxplot(width = .1, fill = "black", outlier.colour = NA) +
stat_summary(fun= median, geom = "point", fill = "white", shape = 21,
size = 2.5)
data6+geom_violin(trim = FALSE)
data6 +geom_violin(scale = "count")
# More smoothing
data6+geom_violin(adjust = 2)
# Less smoothing
data6 +geom_violin(adjust = .5)
# Save a modified data set that only includes of males data for marks that contains > 50
data7 <- df %>%
filter(gender == "Male" & pretest > 50)
# Create a base ggplot object using `data7`, called `data7_p` (for data7 plot)
data8 <- ggplot(data7,aes(x=pretest))
data8+geom_dotplot()
data8 +
geom_dotplot(binwidth = .25, stackdir = "center") +
scale_y_continuous(breaks = NULL) +
theme(axis.title.y = element_blank())
data8 +
geom_dotplot(binwidth = .25, stackdir = "centerwhole") +
scale_y_continuous(breaks = NULL) +
theme(axis.title.y = element_blank())
ggplot(df, aes(x = gender, y = n_student)) +
geom_dotplot(binaxis = "y", binwidth = .5, stackdir = "center")
ggplot(df, aes(x = gender, y = n_student)) +
geom_boxplot(outlier.colour = NA, width = .4) +
geom_dotplot(binaxis = "y", binwidth = .5, stackdir = "center", fill = NA)
ggplot(df, aes(x = pretest, y = n_student)) +
geom_boxplot(aes(x = as.numeric(pretest) + .2, group = pretest), width = .25) +geom_dotplot(aes(x = as.numeric(pretest) - .2, group = pretest),binaxis = "y",binwidth = .5,stackdir = "center") +scale_x_continuous(breaks = 1:nlevels(df$pretest),labels=levels(df$pretest)
)
# Save a base plot object
ggplot(df, aes(x = pretest, y = posttest))+geom_point() +stat_density2d()
# Contour lines, with "height" mapped to color
ggplot(df, aes(x = pretest, y = posttest))+geom_point() +stat_density2d()+stat_density2d(aes(colour = ..level..))
# Map density estimate to fill color
ggplot(df, aes(x = pretest, y = posttest))+geom_point() +stat_density2d()+stat_density2d(aes(fill = ..density..), geom = "raster", contour = FALSE)
# With points, and map density estimate to alpha
ggplot(df, aes(x = pretest, y = posttest))+geom_point() +stat_density2d()+geom_point() +stat_density2d(aes(alpha = ..density..), geom = "tile", contour = FALSE)
# The normal distribution
ggplot(data.frame(x = c(-3, 3)), aes(x = x))  + stat_function(fun = dnorm)
# The t-distribution with df=2
ggplot(data.frame(x = c(-3, 3)), aes(x = x)) + stat_function(fun = dt, args = list(df = 2))
savehistory("C:/Users/inritagi/Desktop/SEM2/4.EDA/Final/la2/RHistory_VisualizationCommands.Rhistory")
